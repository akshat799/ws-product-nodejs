{"version":3,"sources":["components/Navbar/Navbar.js","api/api.js","components/Home/Home.js","components/Chart/Chart.js","components/DataTable/DataTable.js","components/Maps/Maps.js","components/Errors/Error404.js","components/Errors/Error429.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","id","to","baseUrl","process","API","axios","create","baseURL","welcomeApi","get","dailyStatApi","hourlyStatApi","dailyEventApi","hourlyEventApi","hourlyStatDataTableApi","hourlyEventDataTableApi","poiAPI","Home","useState","welcomeCall","setWelcomeCall","error","setError","errorMessage","setErrorMessage","useEffect","a","api","data","response","headingCall","style","overflow","Grid","container","direction","alignItems","spacing","marginTop","item","xs","Typography","component","variant","Paper","elevation","marginLeft","backgroundColor","fontWeight","fontFamily","join","fontSize","color","margin","marginRight","pathname","state","Chart","dailyStat","setDailyStat","hourlyStat","setHourlyStat","dailyEvent","setDailyEvent","hourlyEvent","setHourlyEvent","dailyOptions","setDailyOptions","hourlyOptions","setHourlyOptions","dailyEventOptions","setDailyEventOptions","hourlyEventOptions","setHourlyEventOptions","window","location","hash","reload","statCallDaily","statCallHourly","eventCallDaily","eventCallHourly","drilldown","Highcharts","chart","type","events","e","series","filterValue","point","dataArray","map","filter","date","push","length","name","moment","utc","format","parseInt","clicks","impressions","parseFloat","revenue","charts","addSeriesAsDrilldown","yAxis","setTitle","text","drillup","title","xAxis","colorByPoint","y","newFilter","Set","newHourFilter","add","hour","newStat","Array","from","v","newHourStat","select","newDataArray","_","last","undefined","target","userOptions","filters","entry","console","log","highcharts","options","DataTable","rowEvent","setRowEvent","rowStat","setRowStat","statPageSize","setStatPageSize","eventPageSize","setEventPageSize","statHeight","setStatHeight","eventHeight","setEventHeight","Promise","all","message1","message2","i","j","poi_id","poi_name","statHourlyCall","eventHourlyCall","CustomToolbar","display","justifyContent","height","width","rows","columns","field","headerName","pageSize","onPageSizeChange","newPageSize","rowsPerPageOptions","pagination","components","Toolbar","GoogleApiWrapper","apiKey","google","locations","marker","newLocation","setNewLocation","zoom","setZoom","center","setCenter","lon","poiCall","alignSelf","initialCenter","coords","position","onClick","handleMarker","Error404","cursor","textDecoration","Error429","App","NavRoute","path","Component","exact","Maps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71851d35.chunk.js","sourcesContent":["import React from 'react'\r\nimport './navbar.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar-dark bg-dark\">\r\n                <ul className=\"nav justify-content-center\" id=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/' className='nav-link'>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/charts' className='nav-link'>\r\n                            Chart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/datatable' className='nav-link'>\r\n                            Data Table\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/map' className='nav-link'>\r\n                            Map\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>    \r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst port = process.env.REACT_APP_PORT || 5555 ;\r\nconst baseUrl = `http://localhost:${port}` ;\r\n\r\nconst API = axios.create({baseURL: `${baseUrl}`});\r\n\r\nexport const welcomeApi = () => API.get('/');\r\n\r\nexport const dailyStatApi = () => API.get('/stats/daily');\r\n\r\nexport const hourlyStatApi = () => API.get('/stats/hourly');\r\n\r\nexport const dailyEventApi = () => API.get('/events/daily');\r\n\r\nexport const hourlyEventApi = () => API.get('/events/hourly');\r\n\r\nexport const hourlyStatDataTableApi = () => API.get('/stats/hourly/interest');\r\n\r\nexport const hourlyEventDataTableApi = () => API.get('/events/hourly/interest');\r\n\r\nexport const poiAPI = () => API.get('/poi');","import React, {useEffect , useState} from 'react'\r\nimport * as api from '../../api/api'\r\nimport {Typography , Grid , Paper} from '@material-ui/core'\r\nimport { Redirect } from 'react-router-dom'\r\nexport default function Home() {\r\n\r\n    const [welcomeCall , setWelcomeCall] = useState('');\r\n    const [error , setError] = useState(false);\r\n    const [errorMessage , setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {    \r\n        \r\n        async function headingCall() {\r\n\r\n            try{\r\n\r\n                let {data} = await api.welcomeApi();\r\n                setWelcomeCall(data);\r\n\r\n            }catch(error){\r\n        \r\n               setErrorMessage(`${error.response.data}`);\r\n               setError(true);\r\n        \r\n            }  \r\n        }\r\n\r\n        headingCall();\r\n    },[])\r\n\r\n    return (\r\n        <div style={{ overflow:'hidden'}}>\r\n            \r\n            <Grid container direction='row' alignItems='center' spacing={3} style={{marginTop:'1.5rem'}}>\r\n                <Grid item xs={12}>\r\n                    <Typography component='h1' variant='h3'>{welcomeCall}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper elevation={3} style={{marginLeft:'0.5rem' , backgroundColor:'darkgray'}}>\r\n                        <Typography style={{fontWeight:'bold',fontFamily: [\r\n                            '-apple-system',\r\n                            'BlinkMacSystemFont',\r\n                            '\"Segoe UI\"',\r\n                            'Roboto',\r\n                            '\"Helvetica Neue\"',\r\n                            'Arial',\r\n                            'sans-serif',\r\n                            '\"Apple Color Emoji\"',\r\n                            '\"Segoe UI Emoji\"',\r\n                            '\"Segoe UI Symbol\"',\r\n                        ].join(',') , fontSize:'1.5rem' , color:'aliceblue'}}>About Me</Typography>\r\n\r\n                        <Typography variant='h6' style={{margin:'0.5rem' , color:'aliceblue'}}>\r\n                            I would like to <strong>Thank You </strong>\r\n                            for giving me this opportunity .\r\n                        </Typography>\r\n\r\n                        <Typography variant='body1' style={{fontFamily:'Cambria' , color:'aliceblue'}}>\r\n                            Hi, My name is <strong>Akshat Gulati</strong>. I'll start by telling a bit about\r\n                            my background. I am currently enrolled in \r\n                            <strong> University of Alberta</strong> under the degree program - <strong>\r\n                            BSc (Bachelors of Science) Specialization</strong>. I am doing my major in \r\n                            <strong> Computing Science with specialization in Software Practice</strong>. \r\n                            I am currently in my<strong> 4th year </strong>.\r\n                            <br />\r\n                            <br />\r\n                            I am very passionate about web development and aspire to become a \r\n                            Full Stack Developer. I have 4 projects under my belt, out of which\r\n                            2 are my major projects through which I learned most of my technical skills.\r\n                            I would like to tell you about my plus points, I am a good listener , \r\n                            punctual , hardworking , good at interacting with others and follow the deadlines.\r\n                            <br />\r\n                            <br />\r\n                            I have some Extracurricular achievments as well. I have represented my University\r\n                            as a part of the university cricket team. I have been a part of Student Council\r\n                            as well.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <Paper elevation={3} style={{margin:'0.5rem' , backgroundColor:'aquamarine'}}>\r\n                    <Typography style={{fontWeight:'bold',fontFamily: [\r\n                            '-apple-system',\r\n                            'BlinkMacSystemFont',\r\n                            '\"Segoe UI\"',\r\n                            'Roboto',\r\n                            '\"Helvetica Neue\"',\r\n                            'Arial',\r\n                            'sans-serif',\r\n                            '\"Apple Color Emoji\"',\r\n                            '\"Segoe UI Emoji\"',\r\n                            '\"Segoe UI Symbol\"',\r\n                        ].join(',') , fontSize:'1.5rem'}}>Projects</Typography>\r\n                        <Typography variant='body1' style={{fontFamily:'Cambria'}} >\r\n                            <strong>1. Mechanical Turk Experiment Framework:</strong>\r\n                            <br />\r\n                            Jan21 - Apr21 (For Real Client)\r\n                            <br />\r\n                            <strong>Technical Skills Used:</strong>\r\n                            <br />\r\n                            Django , PostgreSQL , Socket.io , AWS Mturk API endpoints , HTML , CSS , \r\n                            JavaScript , Python Unit Testing\r\n                            <br />\r\n                            <strong>2. Puchh Puchh PetShop Website:</strong>\r\n                            <br />\r\n                            Oct20 - Present (For Real Client)\r\n                            <br />\r\n                            <strong>Technical Skills Used:</strong>\r\n                            <br />\r\n                            JavaScript , Reactjs , Nodejs , Express , Mongoose , MongoDb Atlas , MERN Stack , \r\n                            Redux \r\n                            <br />\r\n                            <strong>3. YFinance Unit Testing :</strong>\r\n                            <br />\r\n                            Mar21 - Mar21 (Personal)\r\n                            <br />\r\n                            <strong>Technical Skills Used:</strong>\r\n                            <br />\r\n                            Python Unit Testing\r\n                            <strong>3. S3 Database Query for IMDB :</strong>\r\n                            <br />\r\n                            Feb21 - Mar21 (Personal)\r\n                            <br />\r\n                            <strong>Technical Skills Used:</strong>\r\n                            <br />\r\n                            AWS S3 , SqlQuery , XML , XPath and XQuery\r\n                    </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper elevation={3} style={{marginRight:'0.5rem' , backgroundColor:'aliceblue'}}>\r\n                    <Typography style={{fontWeight:'bold',fontFamily: [\r\n                            '-apple-system',\r\n                            'BlinkMacSystemFont',\r\n                            '\"Segoe UI\"',\r\n                            'Roboto',\r\n                            '\"Helvetica Neue\"',\r\n                            'Arial',\r\n                            'sans-serif',\r\n                            '\"Apple Color Emoji\"',\r\n                            '\"Segoe UI Emoji\"',\r\n                            '\"Segoe UI Symbol\"',\r\n                        ].join(',') , fontSize:'1.5rem'}}>How I can grow through this Internship</Typography>\r\n                        <Typography variant='body1' style={{fontFamily:'Cambria'}} >\r\n                            Being a part of this internship and working under an exceptional team will help me\r\n                            get hands on experience in my field of interest,web development. Getting a\r\n                            good understanding of how a company works and what is expected of me , early \r\n                            on in my career is something I look forward to achieve from this opportunity. I \r\n                            have had the privilege to work for two individual client prior to this, \r\n                            but being a part of a diverse team and working together is a skill I wish to\r\n                            acquire.\r\n                            <br />\r\n                            <br />\r\n                            I believe in learning throughout the course of this internship and hone not only\r\n                            my technical but my interpersonal skills. I am quite acquainted with working  \r\n                            under pressure and believe to be a good inclusion in your team . This internship\r\n                            will be a great addition to my work experience.\r\n \r\n                        </Typography>\r\n                    </Paper>\r\n                    <Paper elevation={3} style={{margin:'0.5rem' , backgroundColor:'cyan'}}>\r\n                        <Typography style={{fontWeight:'bold',fontFamily: [\r\n                                '-apple-system',\r\n                                'BlinkMacSystemFont',\r\n                                '\"Segoe UI\"',\r\n                                'Roboto',\r\n                                '\"Helvetica Neue\"',\r\n                                'Arial',\r\n                                'sans-serif',\r\n                                '\"Apple Color Emoji\"',\r\n                                '\"Segoe UI Emoji\"',\r\n                                '\"Segoe UI Symbol\"',\r\n                            ].join(',') , fontSize:'1.5rem'}}>Technical Skills</Typography>\r\n                        <Typography variant='body1' style={{fontFamily:'Cambria'}} >\r\n                                <strong>1. Programming Languages:</strong>\r\n                                <br />\r\n                                C, C++, Java, Python,vanilla\r\n                                JavaScript, XQuery &amp; XPath,UML,SQL,Verilog,Assembly\r\n                                Language,Agile Methodology(Scrums).\r\n                                <br />\r\n                                <strong>2.Tools:</strong>\r\n                                <br />\r\n                                MySQL,SQL PLUS , Postgresql(PgAdmin),AWS,XML,MongoDb atlas\r\n                                <br />\r\n                                <strong>3. Web Development Languages:</strong>\r\n                                <br />\r\n                                HTML(5) , CSS (3) , Django ,Bootstrap,React,Nodejs,Expressjs,MERN Stack,Redux\r\n                        </Typography>\r\n                    </Paper>\r\n                    <Paper elevation={3} style={{margin:'0.5rem' , backgroundColor:'darkgoldenrod'}}>\r\n                        <Typography style={{fontWeight:'bold',fontFamily: [\r\n                                    '-apple-system',\r\n                                    'BlinkMacSystemFont',\r\n                                    '\"Segoe UI\"',\r\n                                    'Roboto',\r\n                                    '\"Helvetica Neue\"',\r\n                                    'Arial',\r\n                                    'sans-serif',\r\n                                    '\"Apple Color Emoji\"',\r\n                                    '\"Segoe UI Emoji\"',\r\n                                    '\"Segoe UI Symbol\"',\r\n                                ].join(',') , fontSize:'1.5rem'}}>Award and GPA :</Typography>\r\n                        <Typography variant='body1' style={{fontFamily:'Cambria'}} >\r\n                                <ul>\r\n                                    <li>Joint Sports Secretary </li>\r\n                                    <li>Current GPA : 3.1/4.0</li>    \r\n                                </ul>\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            {error && (\r\n                 <Redirect to ={{\r\n                    pathname:'/toomanyrequests',\r\n                    state:{data : errorMessage }\r\n                }} />\r\n            )\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect , useState} from 'react';\r\nimport * as api from '../../api/api';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport drilldown from 'highcharts/modules/drilldown';\r\nimport { Typography , Grid } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport './chart.css';\r\nimport _ from 'lodash';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nexport default function Chart() {\r\n    \r\n    const [dailyStat , setDailyStat] = useState([]);\r\n    const [hourlyStat , setHourlyStat] = useState([]);\r\n    const [dailyEvent , setDailyEvent] = useState([]);\r\n    const [hourlyEvent , setHourlyEvent] = useState([]);\r\n    const [dailyOptions , setDailyOptions] = useState({});\r\n    const [hourlyOptions , setHourlyOptions] = useState({});\r\n    const [dailyEventOptions , setDailyEventOptions] = useState({});\r\n    const [hourlyEventOptions , setHourlyEventOptions] = useState({});\r\n    \r\n    const [error , setError] = useState(false);\r\n    const [errorMessage , setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(!window.location.hash){\r\n            window.location = window.location + '#loaded'; // Reloading the Page Because Highcharts.charts doesn't save data until caches\r\n            window.location.reload();\r\n        }\r\n\r\n        async function statCallDaily () {\r\n            \r\n            try{\r\n\r\n                let {data} = await api.dailyStatApi();\r\n                setDailyStat(data);\r\n\r\n            }catch(error){\r\n\r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }\r\n        }\r\n\r\n        async function statCallHourly () {\r\n\r\n            try{\r\n\r\n                let {data} = await api.hourlyStatApi();\r\n                setHourlyStat(data);\r\n\r\n            }catch(error){\r\n             \r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }    \r\n        }\r\n\r\n        async function eventCallDaily () {\r\n            try{\r\n                let {data} = await api.dailyEventApi();\r\n                setDailyEvent(data);\r\n            \r\n            }catch(error){\r\n\r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }\r\n        }\r\n\r\n        async function eventCallHourly () {\r\n            try{\r\n\r\n                let {data} = await api.hourlyEventApi();\r\n                setHourlyEvent(data);\r\n\r\n            }catch(error){\r\n\r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }\r\n                \r\n        }\r\n\r\n        statCallDaily();\r\n        statCallHourly();\r\n        eventCallDaily();\r\n        eventCallHourly();\r\n\r\n    },[])\r\n\r\n    drilldown(Highcharts)\r\n    \r\n    useEffect(() => {\r\n        \r\n        setDailyOptions({\r\n            chart: {\r\n                type: 'column',\r\n                events: {\r\n                    drilldown: function(e){\r\n\r\n                        let filterValue = e.point.drilldown;\r\n                        let dataArray = [];\r\n                        \r\n                        dailyStat.map(filter => {\r\n    \r\n                            if (filter.date === filterValue)\r\n                                return dataArray.push(filter); \r\n                        })\r\n\r\n                        let series;\r\n                        \r\n                        if(dataArray.length !== 0){\r\n                            series = {\r\n                                name: moment(dataArray[0].date).utc().format('MM/DD/YYYY'),\r\n                                data:[['Clicks' , parseInt(dataArray[0].clicks , 10)] , ['Impressions' , parseInt(dataArray[0].impressions,10)] , ['Revenue' , parseFloat(dataArray[0].revenue,10)]]\r\n\r\n                            }\r\n                        }else{\r\n                            series = {\r\n                                name: moment(e.point.drilldown).utc().format('MM/DD/YYYY'),\r\n                                data:[['Clicks' , 0] , ['Impressions' , 0] , ['Revenue' , 0]]\r\n                            }\r\n                        }\r\n\r\n            \r\n                        Highcharts.charts[0].addSeriesAsDrilldown(e.point , series)\r\n                        Highcharts.charts[0].yAxis[0].setTitle({text : 'Total No of given Stats'});\r\n                        \r\n                    },\r\n                    drillup: function(e){\r\n                        Highcharts.charts[0].yAxis[0].setTitle({text : 'Total No of Stats'});\r\n                    }\r\n                },\r\n            },\r\n            title: {\r\n                text: 'EQ Works Daily Stats (Click the Date/Column to View)'\r\n            },\r\n            xAxis:{\r\n                type: 'category'    \r\n            },\r\n            yAxis: {\r\n                type: 'logarithmic',\r\n                title: {\r\n                    text: 'Total No of Stats'\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Stats Daily',\r\n                colorByPoint: true,\r\n                data:\r\n                    dailyStat.map(filter => {\r\n                        return (\r\n                            {\r\n                                name: moment(filter.date).utc().format('MM/DD/YYYY'),\r\n                                y: 4,\r\n                                drilldown: filter.date\r\n                            }\r\n                            \r\n                        )\r\n                    })\r\n                \r\n            }],\r\n        })\r\n    },[dailyStat , setDailyOptions])\r\n\r\n    useEffect(() => {\r\n\r\n        let newFilter = new Set();\r\n        let newHourFilter = new Set();\r\n\r\n        hourlyStat.map(filter => {\r\n            newFilter.add(filter.date);\r\n            newHourFilter.add(filter.hour);\r\n        });\r\n\r\n        let newStat = Array.from(newFilter , v => ({['date']:`${v}`}));\r\n        let newHourStat = Array.from(newHourFilter , v => ({['hour']:`${v}`}));\r\n\r\n        let select = '';\r\n        \r\n        setHourlyOptions({\r\n            chart: {\r\n                type: 'column',\r\n                events: {\r\n                    drilldown: function(e){\r\n\r\n                        let filterValue = e.point.drilldown;\r\n                        let dataArray = [];\r\n                        let newDataArray = [];\r\n\r\n                        if (_.last(e.point.drilldown) !== 'Z' &&  _.last(e.point.drilldown) !== undefined){\r\n                            hourlyStat.map(filter => {\r\n\r\n                                if (filter.hour == filterValue)\r\n                                    return dataArray.push(filter); \r\n                            });\r\n                            \r\n                            dataArray.map(filter =>{\r\n\r\n                                if(filter.date === select)\r\n                                    return newDataArray.push(filter) \r\n                            })\r\n\r\n                            let series;\r\n\r\n                            if (newDataArray.length !== 0){\r\n                                series = {\r\n                                    name: `${newDataArray[0].hour}`,\r\n                                    data:[['Clicks' , newDataArray[0].clicks ] , ['Impressions' , newDataArray[0].impressions] , ['Revenue' , parseFloat(dataArray[0].revenue,10)]]\r\n    \r\n                                }\r\n                            }else{\r\n                                series = {\r\n                                    name: `${e.point.drilldown}`,\r\n                                    data:[['Clicks' , 0 ] , ['Impressions' , 0] , ['Revenue' , 0]]\r\n    \r\n                                }\r\n                            }\r\n\r\n                            Highcharts.charts[1].addSeriesAsDrilldown(e.point , series)\r\n                            Highcharts.charts[1].yAxis[0].setTitle({text : 'Total Number of given Stats'});\r\n                        }else{\r\n                            Highcharts.charts[1].yAxis[0].setTitle({text : 'Total Types of Stats'});\r\n                            select = e.point.drilldown;\r\n\r\n                        }\r\n                        \r\n                    },\r\n                    drillup: function(e) {\r\n                        let message = e.target.yAxis[0].userOptions.title.text;\r\n\r\n                        if(message === 'Total Number of given Stats'){\r\n                            Highcharts.charts[1].yAxis[0].setTitle({text : 'Total Types of Stats'});\r\n                        }else{\r\n                            Highcharts.charts[1].yAxis[0].setTitle({text : 'Total No of Hours'});\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n            title: {\r\n                text: 'EQ Works Hourly Stats (Click the Date/Column to View)'\r\n            },\r\n            xAxis:{\r\n                type: 'category'    \r\n            },\r\n            yAxis: {\r\n                type: 'logarithmic',\r\n                title: {\r\n                    text: 'Total No of Hours'\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Stats Hourly',\r\n                colorByPoint: true,\r\n                data:\r\n                    newStat.map(filter => {    \r\n                        return (\r\n                            {\r\n                                name: moment(filter.date).utc().format('MM/DD/YYYY'),\r\n                                y: newHourStat.length,\r\n                                drilldown: filter.date\r\n                            }\r\n                            \r\n                        )\r\n                    })\r\n                \r\n            }],\r\n            drilldown : {\r\n                series:\r\n                    newStat.map(filters => {\r\n                        return (\r\n                            {\r\n                                id:filters.date,\r\n                                name:'Hours',\r\n                                data: newHourStat.map(entry => {\r\n                                    return(\r\n                                        {\r\n                                            name: `${entry.hour}hrs`,\r\n                                            y: 4,\r\n                                            drilldown: entry.hour\r\n                                        }\r\n                                    ) \r\n                                })\r\n                            }\r\n                        )\r\n                    })\r\n            }\r\n        })\r\n    },[hourlyStat])\r\n\r\n    useEffect(() => {\r\n\r\n        setDailyEventOptions({\r\n            chart: {\r\n                type: 'column',\r\n                events: {\r\n                    drilldown: function(e){\r\n\r\n                        let filterValue = e.point.drilldown;\r\n                        let dataArray = [];\r\n                        \r\n                        dailyEvent.map(filter => {\r\n    \r\n                            if (filter.date === filterValue)\r\n                                return dataArray.push(filter); \r\n                        })\r\n\r\n                        let series;\r\n                        \r\n                        if(dataArray.length !== 0){\r\n                            series = {\r\n                                name: moment(dataArray[0].date).utc().format('MM/DD/YYYY'),\r\n                                data:[['Events', parseInt(dataArray[0].events)]]\r\n\r\n                            }\r\n                        }else{\r\n                            series = {\r\n                                name: moment(e.point.drilldown).utc().format('MM/DD/YYYY'),\r\n                                data:[['Events' , 0]]\r\n                            }\r\n                        }\r\n\r\n                        Highcharts.charts[2].addSeriesAsDrilldown(e.point , series)\r\n                        Highcharts.charts[2].yAxis[0].setTitle({text : 'Total Number of Events'});\r\n                    },\r\n                    drillup: function(e) {\r\n                        Highcharts.charts[2].yAxis[0].setTitle({text : 'Total Types of Event Stat'});\r\n                    }\r\n                },\r\n            },\r\n            title: {\r\n                text: 'EQ Works Daily Events (Click the Date/Column to View)'\r\n            },\r\n            xAxis:{\r\n                type: 'category'    \r\n            },\r\n            yAxis: {\r\n                type: 'logarithmic',\r\n                title: {\r\n                    text: 'Total Types of Event Stat'\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Events Daily',\r\n                colorByPoint: true,\r\n                data:\r\n                    dailyEvent.map(filter => {\r\n                        return (\r\n                            {\r\n                                name: moment(filter.date).utc().format('MM/DD/YYYY'),\r\n                                y: 1,\r\n                                drilldown: filter.date\r\n                            }\r\n                            \r\n                        )\r\n                    })\r\n                \r\n            }],\r\n        })\r\n    },[dailyEvent]);\r\n\r\n    useEffect(() => {\r\n\r\n        let newFilter = new Set();\r\n        let newHourFilter = new Set();\r\n\r\n        hourlyEvent.map(filter => {\r\n            newFilter.add(filter.date);\r\n            newHourFilter.add(filter.hour);\r\n        });\r\n\r\n        let newStat = Array.from(newFilter , v => ({['date']:`${v}`}));\r\n        let newHourStat = Array.from(newHourFilter , v => ({['hour']:`${v}`}));\r\n\r\n        let select = '';\r\n        \r\n        setHourlyEventOptions({\r\n            chart: {\r\n                type: 'column',\r\n                events: {\r\n                    drilldown: function(e){\r\n\r\n                        let filterValue = e.point.drilldown;\r\n                        let dataArray = [];\r\n                        let newDataArray = [];\r\n\r\n                        if (_.last(e.point.drilldown) !== 'Z' &&  _.last(e.point.drilldown) !== undefined){\r\n                            hourlyEvent.map(filter => {\r\n\r\n                                if (filter.hour == filterValue)\r\n                                    return dataArray.push(filter); \r\n                            });\r\n                            \r\n                            dataArray.map(filter =>{\r\n\r\n                                if(filter.date === select)\r\n                                    return newDataArray.push(filter) \r\n                            })\r\n\r\n                            let series;\r\n\r\n                            if (newDataArray.length !== 0){\r\n                                console.log(newDataArray)\r\n                                series = {\r\n                                    name: `${newDataArray[0].hour} hrs`,\r\n                                    data:[['Events' , newDataArray[0].events]]\r\n    \r\n                                }\r\n                            }else{\r\n                                series = {\r\n                                    name: `${e.point.drilldown} hrs`,\r\n                                    data:[['Events' , 0 ]]\r\n    \r\n                                }\r\n                            }\r\n\r\n                            Highcharts.charts[3].addSeriesAsDrilldown(e.point , series)\r\n                            Highcharts.charts[3].yAxis[0].setTitle({text : 'Total Number of Events'})\r\n                            \r\n                        }else{\r\n\r\n                            Highcharts.charts[3].yAxis[0].setTitle({text : 'Total Event Stat'});\r\n                            select = e.point.drilldown;\r\n\r\n                        }\r\n                        \r\n                    },\r\n                    drillup: function(e) {\r\n\r\n                        let message = e.target.yAxis[0].userOptions.title.text\r\n                        \r\n                        if(message === 'Total Number of Events'){\r\n                            Highcharts.charts[3].yAxis[0].setTitle({text : 'Total Event Stat'});\r\n                        }else {\r\n                            Highcharts.charts[3].yAxis[0].setTitle({text : 'Total Types of Hours'});\r\n                        }\r\n                        \r\n                    }\r\n                },\r\n            },\r\n            title: {\r\n                text: 'EQ Works Hourly Events (Click the Date/Column to View)'\r\n            },\r\n            xAxis:{\r\n                type: 'category'    \r\n            },\r\n            yAxis: {\r\n                type: 'logarithmic',\r\n                title: {\r\n                    text: 'Total type of Hours'\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Events Hourly',\r\n                colorByPoint: true,\r\n                data:\r\n                    newStat.map(filter => {    \r\n                        return (\r\n                            {\r\n                                name: moment(filter.date).utc().format('MM/DD/YYYY'),\r\n                                y: newHourStat.length,\r\n                                drilldown: filter.date\r\n                            }\r\n                            \r\n                        )\r\n                    })\r\n                \r\n            }],\r\n            drilldown : {\r\n                series:\r\n                    newStat.map(filters => {\r\n                        return (\r\n                            {\r\n                                id:filters.date,\r\n                                name:'Hours',\r\n                                data: newHourStat.map(entry => {\r\n                                    return(\r\n                                        {\r\n                                            name: `${entry.hour}hrs`,\r\n                                            y: 1,\r\n                                            drilldown: entry.hour\r\n                                        }\r\n                                    ) \r\n                                })\r\n                            }\r\n                        )\r\n                    })\r\n            }\r\n        })\r\n    },[hourlyEvent]);\r\n     \r\n    return (\r\n        <div className='chart'>\r\n            <Grid container direction='row' alignItems='center' spacing={4} style={{marginTop:'1.5rem'}}>\r\n                <Grid item xs={12}>\r\n                    <Typography component='h1' variant='h3'>EQ Works Charts</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <HighchartsReact highcharts={Highcharts} options={dailyOptions} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <HighchartsReact highcharts={Highcharts} options={hourlyOptions}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <HighchartsReact highcharts={Highcharts} options={dailyEventOptions} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <HighchartsReact highcharts={Highcharts} options={hourlyEventOptions}/>\r\n                </Grid>\r\n            </Grid>\r\n            {error && (\r\n                 <Redirect to ={{\r\n                    pathname:'/toomanyrequests',\r\n                    state:{data : errorMessage }\r\n                }} />\r\n            )\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React , {useEffect , useState} from 'react';\r\nimport { Typography , Grid } from '@material-ui/core';\r\nimport {DataGrid , GridToolbarContainer , GridToolbarFilterButton } from '@mui/x-data-grid';\r\nimport * as api from '../../api/api';\r\nimport './data.css';\r\nimport moment from 'moment';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default function DataTable() {\r\n    \r\n    const [rowEvent , setRowEvent] = useState([]);\r\n    const [rowStat , setRowStat] = useState([]);\r\n    const [statPageSize , setStatPageSize] = useState(5);\r\n    const [eventPageSize , setEventPageSize] = useState(5);\r\n    const [statHeight , setStatHeight] = useState('450px')\r\n    const [eventHeight , setEventHeight] = useState('450px')\r\n\r\n    const [error , setError] = useState(false);\r\n    const [errorMessage , setErrorMessage] = useState('');\r\n\r\n    const statColumn = [\r\n        {\r\n            field: 'date',\r\n            headerName: 'Date',\r\n            width: 130\r\n        },\r\n        {\r\n            field: 'poi_name',\r\n            headerName: 'Name' ,\r\n            width: 300\r\n        },\r\n        {\r\n            field: 'clicks',\r\n            headerName: 'Clicks',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'hour',\r\n            headerName: 'Hour',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'impressions',\r\n            headerName: 'Impressions',\r\n            width: 200\r\n        },\r\n        {\r\n            field: 'revenue',\r\n            headerName: 'Revenue',\r\n            width: 220\r\n        }\r\n    ]\r\n\r\n    const eventColumn = [\r\n        {\r\n            field:'date',\r\n            headerName:'Date',\r\n            width: 300\r\n        },\r\n        {\r\n            field:'poi_name',\r\n            headerName:'Name',\r\n            width: 300\r\n        },\r\n        {\r\n            field:'hour',\r\n            headerName:'Hour',\r\n            width:300\r\n        },\r\n        {\r\n            field:'events',\r\n            headerName:'Events',\r\n            width:300\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n\r\n        async function statHourlyCall(){\r\n\r\n            try{\r\n\r\n                let [message1,message2] = await Promise.all([(await api.hourlyStatDataTableApi()).data , (await api.poiAPI()).data]);\r\n\r\n                for(let i = 0 ; i < message1.length ; i++){\r\n\r\n                    message1[i].id = i;\r\n\r\n                    for(let j =0 ; j < message2.length ; j++){\r\n                        \r\n                        if(message1[i].poi_id === message2[j].poi_id){\r\n\r\n                            message1[i].date = moment(message1[i].date).utc().format('MM/DD/YYYY');\r\n                            message1[i].poi_name = message2[j].name;        \r\n                            break;\r\n\r\n                        }else{\r\n\r\n                            continue;\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n                \r\n                setRowStat(message1);\r\n            }catch(error){\r\n\r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }\r\n        }\r\n\r\n        async function eventHourlyCall(){\r\n\r\n            try{\r\n\r\n                let [message1,message2] = await Promise.all([(await api.hourlyEventDataTableApi()).data , (await api.poiAPI()).data]);\r\n\r\n                for(let i = 0 ; i < message1.length ; i++){\r\n                    \r\n                    message1[i].id = i;\r\n\r\n                    for(let j =0 ; j < message2.length ; j++){\r\n                        \r\n                        if(message1[i].poi_id === message2[j].poi_id){\r\n\r\n                            message1[i].date = moment(message1[i].date).utc().format('MM/DD/YYYY');\r\n                            message1[i].poi_name = message2[j].name;        \r\n                            break;\r\n\r\n                        }else{\r\n\r\n                            continue;\r\n\r\n                        }\r\n                    }\r\n                }\r\n            \r\n                setRowEvent(message1);\r\n            }catch(error){\r\n\r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }\r\n        }\r\n        \r\n\r\n        statHourlyCall();\r\n        eventHourlyCall();\r\n\r\n    },[])\r\n\r\n    const CustomToolbar = () => {\r\n        return (\r\n            <GridToolbarContainer style={{display:'flex',justifyContent:'center'}}>\r\n                <GridToolbarFilterButton \r\n                style={{color: 'black' , fontWeight:'bolder' , fontSize:'20px'}}/>\r\n                \r\n            </GridToolbarContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='data-table' >\r\n            <Grid container direction='row' alignItems='center' spacing={3} style={{marginTop:'1.5rem'}}>\r\n                <Grid item xs={12}>\r\n                    <Typography component='h1' variant='h3'>Data Table</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{fontWeight:'bolder' , fontSize:'large'}}>Stat Table</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{height:`${statHeight}` , width: '100%'}}>\r\n                    <DataGrid \r\n                        rows={rowStat} \r\n                        columns={statColumn}\r\n                        pageSize ={statPageSize}\r\n                        onPageSizeChange = {(newPageSize) => {\r\n                            setStatPageSize(newPageSize)\r\n                            if(newPageSize === 10){\r\n                                setStatHeight('690px')\r\n                            }else if(newPageSize === 25){\r\n                                setStatHeight('1480px')\r\n                            }else{\r\n                                setStatHeight('450px')\r\n                            }}}\r\n                        rowsPerPageOptions= {[5 , 10 , 25]}\r\n                        pagination\r\n                        components={{\r\n                            Toolbar: CustomToolbar,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{fontWeight: 'bolder' , fontSize:'large'}}>Event Table</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{height:`${eventHeight}` , width: '100%'}}>\r\n                    <DataGrid \r\n                        rows={rowEvent} \r\n                        columns={eventColumn}\r\n                        pageSize ={eventPageSize}\r\n                        onPageSizeChange = {(newPageSize) => {\r\n                            setEventPageSize(newPageSize)\r\n                            if(newPageSize === 10){\r\n                                setEventHeight('690px')\r\n                            }else if(newPageSize === 25){\r\n                                setEventHeight('1480px')\r\n                            }else{\r\n                                setEventHeight('450px')\r\n                            }}}\r\n                        rowsPerPageOptions= {[5 , 10 , 25]}\r\n                        pagination\r\n                        components={{\r\n                            Toolbar: CustomToolbar,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            {error && (\r\n                 <Redirect to ={{\r\n                    pathname:'/toomanyrequests',\r\n                    state:{data : errorMessage }\r\n                }} />\r\n            )\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Map , GoogleApiWrapper , InfoWindow , Marker , MarkerCluster} from 'google-maps-react';\r\nimport {Typography} from '@material-ui/core';\r\nimport * as api from '../../api/api';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport function Maps({google , locations =[] , marker}) {\r\n\r\n    const [newLocation , setNewLocation] = useState(locations)\r\n    const [zoom , setZoom] = useState(4);\r\n    const [center , setCenter] = useState(newLocation[0])\r\n\r\n    const [error , setError] = useState(false);\r\n    const [errorMessage , setErrorMessage] = useState('');\r\n\r\n    const handleMarker = (coords) => {\r\n\r\n        setZoom(4);\r\n\r\n        for(let i = 0 ; i < newLocation.length ; i ++){\r\n            \r\n            if(newLocation[i] === coords){\r\n            \r\n                setCenter(newLocation[i]);\r\n                setZoom(14);\r\n            \r\n                break;\r\n            \r\n            }else{\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        async function poiCall(){\r\n            \r\n            try{\r\n                let {data} = await api.poiAPI();\r\n            \r\n                for (let i = 0 ; i < data.length ; i ++){\r\n                    let lng = 'lng';\r\n                    data[i] = {...data[i] , [lng] : data[i].lon}\r\n                    delete data[i].lon\r\n                }\r\n            \r\n                setNewLocation(data);\r\n\r\n            }catch(error){\r\n\r\n                setErrorMessage(`${error.response.data}`);\r\n                setError(true);\r\n\r\n            }\r\n        }\r\n\r\n        poiCall();\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Typography component='h1' variant='h3' style={{marginTop:'1.5rem' , alignSelf:'center'}}>Map</Typography>\r\n            <Map\r\n            google={google}\r\n            zoom={zoom}\r\n            style={{width:'100%' , height:'70%'}}\r\n            center={center}\r\n            initialCenter={newLocation[0]} >\r\n                {newLocation.map(\r\n                    coords => <Marker \r\n                    position = {coords} \r\n                    onClick= {() => {handleMarker(coords)}}/>\r\n                )}\r\n            </Map>\r\n            {error && (\r\n                 <Redirect to ={{\r\n                    pathname:'/toomanyrequests',\r\n                    state:{data : errorMessage }\r\n                }} />\r\n            )\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: `${process.env.REACT_APP_GOOGLE_API_KEY}`\r\n})(Maps);","import { Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <div>\r\n            <Grid container direction='column' spacing={3} alignItems='center' style={{marginTop:'1.5rem'}}>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{fontSize:'40px' , color:'red' , fontWeight:'bolder'}}>Error 404: Page Not Found</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Link to='/' style={{color:`black`, fontSize:'20px' , cursor:'pointer' , textDecoration:'none' , fontWeight:'bold'}}>Return to HomePage</Link>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import { Typography , Grid } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nexport default function Error429({location}) {\r\n    \r\n    return (\r\n        \r\n        <div>\r\n            <Grid container direction='column' spacing={3} alignItems='center' style={{marginTop:'1.5rem'}}>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{fontSize:'40px' , color:'red' , fontWeight:'bolder'}}>Error 429: Too Many Requests</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography  style={{color:`black`, fontSize:'20px' , fontWeight:'bold' }}>{location.state.data}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom'\nimport Home from './components/Home/Home';\nimport Chart from './components/Chart/Chart';\nimport DataTable from './components/DataTable/DataTable';\nimport Maps from './components/Maps/Maps';\nimport Error404 from './components/Errors/Error404';\nimport Error429 from './components/Errors/Error429';\n\nfunction App() {\n  const NavRoute = ({path , component:Component , exact}) => {\n    return (\n      <Route exact={exact} path={path} >\n        <Navbar />\n        <Component />\n      </Route>\n    )\n  }\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <NavRoute exact path='/' component={Home}/>\n          <NavRoute path='/charts'  component={Chart} />\n          <NavRoute path='/charts#loaded' component={Chart} />\n          <NavRoute exact path='/datatable' component={DataTable} />\n          <NavRoute exact path='/map' component={Maps} />\n          <Route path='/toomanyrequests' component={Error429} />\n          <Route component={Error404} />\n          \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}